{"version":3,"sources":["components/Mattereal/Cookie.js","components/Mattereal/Mattereal.js","components/Digits/Matterealize.js","components/Digits/Teacher.js","components/Digits/Chat.js","components/Magazine/Magazine.js","components/Stash/Reader.js","App.js","serviceWorker.js","index.js"],"names":["Cookie","props","x","id","onClick","e","$","append","css","clientY","clientX","show","console","log","children","useStyles","makeStyles","card","width","height","pointerEvents","Mattereal","load","useState","idx","setIdx","classes","Grid","container","justify","style","position","Card","CardActionArea","CardMedia","className","component","alt","image","length","src","title","defaultProps","theme","appBar","marginLeft","spacing","flex","fab","margin","React","forwardRef","ref","Slide","direction","dialogContent","Magazine","getItems","count","offset","Array","from","v","k","map","content","reorder","list","startIndex","endIndex","result","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","padding","grid","background","getListStyle","isDraggingOver","Reader","state","items","selected","id2List","droppable","droppable2","getList","onDragEnd","setState","this","class","provided","snapshot","innerRef","item","key","draggableId","draggableProps","dragHandleProps","placeholder","Component","App","routes","useRoutes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51e67186.chunk.js","sourcesContent":["import React from 'react'\r\nimport $ from 'jquery'\r\nimport './cookie.css'\r\n\r\n\r\nexport function Cookie (props) {\r\n    var x = 0;\r\n    function handleClick(e) {\r\n        x++;\r\n        $(\"#cookie\").append('<div id=\"x'+x+'\" hidden>+1.0</div>');\r\n        $(\"#x\"+x).css(\"top\", e.clientY);\r\n        $(\"#x\"+x).css(\"left\", e.clientX - 10);\r\n        $(\"#x\"+x).css(\"position\", \"absolute\");\r\n        $(\"#x\"+x).css(\"width\", \"25px\");\r\n        $(\"#x\"+x).css(\"height\", \"25px\");\r\n        $(\"#x\"+x).css(\"color\", \"white\");\r\n        $(\"#x\"+x).css(\"font-weight\", \"bold\");\r\n        $(\"#x\"+x).css(\"animation\", \"GoUp 2s forwards linear\");\r\n        $(\"#x\"+x).show();\r\n        console.log('goose')\r\n    }  \r\n    \r\n    return (\r\n        <div id=\"cookie\" onClick={handleClick}>\r\n             {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Card, CardActionArea, CardMedia, Grid } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\nimport { Cookie } from './Cookie'\r\n\r\nconst propTypes = {\r\n  src: PropTypes.string.isRequired,  \r\n}\r\nconst defaultProps = {\r\n  src: \"https://lh3.googleusercontent.com/_1whFm6BwCQvIzSf-dn5oTmjz6QycDaLluhsBUSsUiwp84NnlflD_S4AVVt-CIQi2rWIHthJvqO-s8X2WA-bdBL2v5N1sxisI6-fDPvsPCZO9dxRc7scH-xBkKBIwIE6uRL6iOtxNHCqSaYUJomqf27rRFFEIEDune9pmBOwC1a6-77t9IWeIt7MM-SimbLChfTzJc9ILu6okMkHyeGyT8Q6vLUkVAx2HQq-Wtx_RAfz8uGV6C2Wx0qSA-lzyz4y0HB-vOWGC6HVXfE41iv1MgblqQg846WzEzK3JPRRSEWDXjHSPn8rQ7gHfQvkUd9ilzSrBJBpUnhPtg9_G94_VbZ4sNtcAQF85G0_k0vgAu3BDTbrU02lifxfXtwud19JdAfV4clVQUX2t4tTA_zdIqcxsbn1T-vWpfyN-E5gYk3VpSxTwJmh7_jZ_0mVEUtUZ8xup4Vdi9gFfidLmuEuJnt_JhyFqNp244CZHmQpTCZa4EgEwMZDH4w_6PMp7uz1aaXpMTHhlh0A6k-2I5acNvFxgsm6J3fIeUD_QRV4fKOKIiL0WH2wxrcaBZDMrMPUcHZmGp_zV5KTiSJ1gOozryZdzj3-GzH9KDTEGJpV4y1sTnkczjbCuCUGdrX-GrRPZCRzOYUl4n_0PDW7425ErbZ3IpVFgffN2qEMAg9gVYN_KZFqmF0-sVCgjep1lOjMhUwZKzmxyAnuGV42ZtL7EuwQhQ\"\r\n}\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: 'auto',\r\n    height: '100vh', pointerEvents: 'auto'\r\n  },\r\n})                                                                        /*b \r\n                           d8P     d8P                                    88P \r\n                        d888888Pd888888P                                 d88  \r\n  88bd8b,d88b  d888b8b    ?88'    ?88'   d8888b  88bd88b d8888b d888b8b  888  \r\n  88P'`?8P'?8bd8P' ?88    88P     88P   d8b_,dP  88P'  `d8b_,dPd8P' ?88  ?88  \r\n d88  d88  88P88b  ,88b   88b     88b   88b     d88     88b    88b  ,88b  88b \r\nd88' d88'  88b`?88P'`88b  `?8b    `?8b  `?888P'd88'     `?888P'`?88P'`88b  8*/\r\nexport function Mattereal(props) {\r\n  const { load } = props;\r\n  const [idx, setIdx] = useState(0)\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container justify = \"center\" style={{ position: 'fixed', pointerEvents: 'none'}} >\r\n        <Cookie>\r\n          <Card >\r\n          <CardActionArea>\r\n            <CardMedia \r\n              className={classes.card}\r\n              component=\"img\"\r\n              alt=\"gift\"\r\n              image={load[idx]}\r\n              onClick={(e) => { setIdx(load.length > idx + 1 ? idx + 1 : 0)}}\r\n              src={load[idx]}\r\n              title=\"gift\"\r\n            />\r\n          </CardActionArea>\r\n          </Card>`\r\n        </Cookie>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\nMattereal.propTypes = propTypes\r\nMattereal.defaultProps = defaultProps","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Button, Dialog, Fab, IconButton, Slide, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport Icon from '@mdi/react';\r\nimport { mdiClose, mdiFirebase } from '@mdi/js';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n    fab: {\r\n      margin: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport function Matterealize (props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [text, setText] = useState('');\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChangeTextField = (event) => {\r\n        setText(event.target.value);    \r\n    }\r\n    function handleSave () {\r\n        return text.split(',')\r\n            .filter(gif => gif.startsWith('[\"https://lh3'))\r\n            .map(gif => gif.replace(/(\\[\\\"|\\\")/g, '').replace(/(\\r\\n\\t|\\n|\\r\\t)/gm,\"\"));\r\n    }\r\n    return (\r\n        <div>\r\n            <Fab color=\"primary\" aria-label=\"matterealize\" className={classes.fab} onClick={handleClickOpen}>\r\n                <Icon path={mdiFirebase}\r\n                    title=\"matterealize mattereal\"\r\n                    size={1}\r\n                    color=\"red\"\r\n                />\r\n            </Fab>\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                    <Icon path={mdiClose}\r\n                        title=\"close\"\r\n                        size={1}\r\n                    />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                    Matterealize Mattereal\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => {\r\n                        props.handleMatterealize(handleSave());\r\n                        handleClose();\r\n                    }}>\r\n                    save\r\n                    </Button>\r\n                </Toolbar>\r\n                </AppBar>\r\n                <TextField id=\"outlined-full-width\" label=\"Matterealize\" style={{ margin: 8 }} placeholder=\"Paste html content\"\r\n                    margin=\"normal\" variant=\"outlined\" multiline rows=\"33\" InputLabelProps={{ shrink: true }} \r\n                    onChange={handleChangeTextField}\r\n                />\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Fab } from '@material-ui/core';\r\nimport Icon from '@mdi/react'\r\nimport { mdiCharity } from '@mdi/js';\r\n\r\nconst useStyles = makeStyles(theme => ({    \r\n    fab: {\r\n      margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport function Teacher (props) {\r\n    const classes = useStyles();    \r\n    \r\n\r\n    return (        \r\n        <div>\r\n            <Fab color=\"primary\" aria-label=\"teach her\" className={classes.fab} onClick={props.handleClick}>\r\n                <Icon path={mdiCharity }\r\n                    title=\"teach her\"\r\n                    size={1}\r\n                    color=\"red\"\r\n                />\r\n            </Fab>\r\n        </div> \r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle, Fab, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { mdiConsole } from '@mdi/js';\r\nimport Draggable from 'react-draggable';\r\nimport Icon from '@mdi/react';\r\n\r\nfunction PaperComponent(props) {\r\n    return (\r\n      <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n        <Paper {...props} />\r\n      </Draggable>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({    \r\n    fab: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    dialogContent: {\r\n        width: 333\r\n    }\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n      id: '0',\r\n      message: 'Welcome to react chatbot!',\r\n      trigger: '1',\r\n    },\r\n    {\r\n      id: '1',\r\n      message: 'Bye!',\r\n      end: true,\r\n    },\r\n  ];\r\n\r\nexport function Chat (props) {\r\n    const classes = useStyles();   \r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (    \r\n        <div>\r\n            <Fab color=\"primary\" aria-label=\"chat\" className={classes.fab} onClick={handleClickOpen}>\r\n                <Icon path={mdiConsole }\r\n                    title=\"chat\"\r\n                    size={1}\r\n                    color=\"red\"\r\n                />\r\n            </Fab>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperComponent={PaperComponent}\r\n                aria-labelledby=\"draggable-dialog-title\"\r\n            >\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                Subscribe\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialogContent}>\r\n                <DialogContentText>\r\n                    \r\n                </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Mattereal } from '../Mattereal/';\r\nimport Hands from '../Hands/Hands';\r\n          /*-.    ,--,     .--.   _____  ,-..-. .-.,---.   \r\n|\\    /| / /\\ \\ .' .'     / /\\ \\ /___  / |(||  \\| || .-'   \r\n|(\\  / |/ /__\\ \\|  |  __ / /__\\ \\   / /) (_)|   | || `-.   \r\n(_)\\/  ||  __  |\\  \\ ( _)|  __  |  / /(_)| || |\\  || .-'   \r\n| \\  / || |  |)| \\  `-) )| |  |)| / /___ | || | |)||  `--. \r\n| |\\/| ||_|  (_) )\\____/ |_|  (_)(_____/ `-'/(  (_)/( __.' \r\n'-'  '-'        (__)                       (__)   (_*/     \r\nfunction Magazine(props) {\r\n    const [load, setLoad] = useState([\"https://lh3.googleusercontent.com/_1whFm6BwCQvIzSf-dn5oTmjz6QycDaLluhsBUSsUiwp84NnlflD_S4AVVt-CIQi2rWIHthJvqO-s8X2WA-bdBL2v5N1sxisI6-fDPvsPCZO9dxRc7scH-xBkKBIwIE6uRL6iOtxNHCqSaYUJomqf27rRFFEIEDune9pmBOwC1a6-77t9IWeIt7MM-SimbLChfTzJc9ILu6okMkHyeGyT8Q6vLUkVAx2HQq-Wtx_RAfz8uGV6C2Wx0qSA-lzyz4y0HB-vOWGC6HVXfE41iv1MgblqQg846WzEzK3JPRRSEWDXjHSPn8rQ7gHfQvkUd9ilzSrBJBpUnhPtg9_G94_VbZ4sNtcAQF85G0_k0vgAu3BDTbrU02lifxfXtwud19JdAfV4clVQUX2t4tTA_zdIqcxsbn1T-vWpfyN-E5gYk3VpSxTwJmh7_jZ_0mVEUtUZ8xup4Vdi9gFfidLmuEuJnt_JhyFqNp244CZHmQpTCZa4EgEwMZDH4w_6PMp7uz1aaXpMTHhlh0A6k-2I5acNvFxgsm6J3fIeUD_QRV4fKOKIiL0WH2wxrcaBZDMrMPUcHZmGp_zV5KTiSJ1gOozryZdzj3-GzH9KDTEGJpV4y1sTnkczjbCuCUGdrX-GrRPZCRzOYUl4n_0PDW7425ErbZ3IpVFgffN2qEMAg9gVYN_KZFqmF0-sVCgjep1lOjMhUwZKzmxyAnuGV42ZtL7EuwQhQ\"])\r\n    function handleLoad(load) {\r\n        setLoad(load)\r\n    }    \r\n    return (\r\n        <>\r\n            petty\r\n            {/* <Mattereal load={load} /> */}\r\n            {/* <Hands handleLoad={handleLoad} /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Magazine;","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core/';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport './Reader.css'\r\n\r\n\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n    Array.from({ length: count }, (v, k) => k).map(k => ({\r\n        id: `item-${k + offset}`,\r\n        content: `item ${k + offset}`\r\n    }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    padding: grid * 2,\r\n    margin: `0 0 ${grid}px 0`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n    padding: grid,\r\n    width: 250\r\n});\r\n\r\nclass Reader extends Component {\r\n    state = {\r\n        items: getItems(10),\r\n        selected: getItems(5, 10)\r\n    };\r\n\r\n    /**\r\n     * A semi-generic way to handle multiple lists. Matches\r\n     * the IDs of the droppable container to the names of the\r\n     * source arrays stored in the state.\r\n     */\r\n    id2List = {\r\n        droppable: 'items',\r\n        droppable2: 'selected'\r\n    };\r\n\r\n    getList = id => this.state[this.id2List[id]];\r\n\r\n    onDragEnd = result => {\r\n        const { source, destination } = result;\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(\r\n                this.getList(source.droppableId),\r\n                source.index,\r\n                destination.index\r\n            );\r\n\r\n            let state = { items };\r\n\r\n            if (source.droppableId === 'droppable2') {\r\n                state = { selected: items };\r\n            }\r\n\r\n            this.setState(state);\r\n        } else {\r\n            const result = move(\r\n                this.getList(source.droppableId),\r\n                this.getList(destination.droppableId),\r\n                source,\r\n                destination\r\n            );\r\n\r\n            this.setState({\r\n                items: result.droppable,\r\n                selected: result.droppable2\r\n            });\r\n        }\r\n    };\r\n\r\n    // Normally you would want to split things out into separate components.\r\n    // But in this example everything is just done in one place for simplicity\r\n    render() {\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div class=\"grid-container\">\r\n                    <div class=\"item3\">\r\n                    <Droppable droppableId=\"droppable\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}>\r\n                                {this.state.items.map((item, index) => (\r\n                                    <Draggable\r\n                                        key={item.id}\r\n                                        draggableId={item.id}\r\n                                        index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}>\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                    </div>\r\n                    <div class=\"item4\">\r\n                    <Droppable droppableId=\"droppable2\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}>\r\n                                {this.state.selected.map((item, index) => (\r\n                                    <Draggable\r\n                                        key={item.id}\r\n                                        draggableId={item.id}\r\n                                        index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}>\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                    </div>\r\n                </ div>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\nexport default Reader;\r\n","import React from 'react';\nimport './App.css';\nimport { useRoutes } from 'hookrouter';\nimport { Mattereal, Cookie } from './components/Mattereal';\nimport Magazine from './components/Magazine/Magazine';\nimport Reader from './components/Stash/Reader';\n\n\nfunction App() {\n  const routes = {\n    '/': () => <Magazine />,\n    '/cookie': () => <Cookie />,\n    '/mattereal': () => <Mattereal />,  \n    '/reader': () => <Reader />\n  };\n  \n  const routeResult = useRoutes(routes);\n    \n  return routeResult; \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}